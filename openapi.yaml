openapi: 3.0.3
info:
  title: Hery first APIs Definition
  description: |
      # About Us
      **HeryShop** is a product selling company. Any website can use this _API_.
      # Categories suported
        - T-Shirts
          - Logo
          - No-logo
        - Trousers
        - Sunglasses 
        - Hats
  termsOfService: https://hery.com/terms/
  contact:
    name: API Support
    url: https://www.hery.com/support
    email: support@hery.com
  license:
    name: Hery license
    url: https://www.hery.com/licenses
  version: 0.0.1
externalDocs:
    description: Extra info
    url: https://example.com/docs
servers:
  - url: https://hery.com/v1
    description: Development server
  - url: https://hery.com/v2
    description: Production server
  - url: https://{username}.server.com:{port}/{version}
    variables:
      username:
        default: demo
        description: This value is assigned by the service provider
      port:
        enum:
          - "8443"
          - "443"
        default: "8443"
      version:
        default: v1
tags:
  - name: Categories
    description: Categories-related operations
  - name: Products
    description: Products-related operations
  - name: Orders
    description: Order-related operations
security:
  - BasicAuth: []
  - BearerAuth: []
  - ApiKeyAuth: []
  - oAuth2AuthCode:
    - read
    - write
    - admin
paths:
  /categories:
    get: 
      tags:
        - Categories
      summary: List of all categories
      description: Returns the list of categories
      operationId: getCategories
      security:
        - BasicAuth: []
      parameters:
        - name: category_id
          in: query
          schema:
            type: integer
            minimum: 100
            maximum: 1000
          examples:
            t-shirt:
              value: 101
            trousers:
              value: 102
            sunglasses:
              value: 103
            hat:
              value: 104
      responses: 
        '200':
          description: A list of categories
          content:
            application/json:
              schema:
                  type: array
                  items:
                    $ref: "#/components/schemas/Category"
              examples:
                all-categories-data:
                  summary: Categories example data
                  value:
                    - categoryId: 101
                      name: T-shirts
                    - categoryId: 102
                      name: Trousers
                    - categoryId: 103
                      name: Sunglasses
                    - categoryId: 104
                      name: Hats
                single-category-data:
                  summary: Single category example data
                  value:
                    - categoryId: 101
                      name: T-shirts
        '500':
          $ref: "#/components/responses/InternalServerError"
  /categories/{category_id}:
    get: 
      tags:
        - Categories
      summary: Return categories details
      description: Returns the category details from Hery
      operationId: getCategoryDetails
      security: 
        - oAuth2AuthCode: []
      parameters:
        - name: category_id
          in: path
          required: True
          schema:
            type: integer
            minimum: 100
            maximum: 1000
          example: 101
      responses: 
        '200':
          description: Return category details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Category"
        '500':
          $ref: "#/components/responses/InternalServerError"
  /products:
    get:
      tags:
          - Products
      summary: List of all products
      description: Return the list of products
      operationId: getProducts
      parameters:
        - name: product_id
          in: query
          schema:
            type: integer
            minimum: 100
            maximum: 1000
          example: 101
      responses: 
        '200':
          description: A list of products
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Product"
              examples:
                products-data:
                  summary: Products example data
                  value:
                    - productId: 101
                      name: Black T-shirt size:L
                      price: 25.50
                      categoryName: T-shirts
                      quantity: 54
                    - productId: 102
                      name: Jeans
                      price: 80.00
                      categoryName: Trousers
                      quantity: 23
                    - productId: 103
                      name: Rayban Sunglasses
                      price: 750.00
                      categoryName: Sunglasses
                      quantity: 12
        '500':
          $ref: "#/components/responses/InternalServerError"
  /products/{product_id}:
    get: 
      tags:
          - Products
      summary: Return product details
      description: Returns the category detail from Hery
      operationId: getProductDetails
      parameters:
        - name: product_id
          in: path
          required: True
          schema:
            type: integer
            minimum: 100
            maximum: 1000
          example: 101
      responses: 
        '200':
          description: Return product details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"
        '500':
          $ref: "#/components/responses/InternalServerError"
  /orders:
    post:
      tags:
          - Orders
      summary: Create Order
      description: |
        Post order details to Hery for processing
        and shipping
      operationId: saveOrderDetails
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                products:
                  type: array
                  items:
                    $ref: "#/components/schemas/Product"
                address:
                  type: object
                  properties:
                    addressLine:
                      type: string
                    city:
                      type: string
                    state:
                      type: string
                    zipcode:
                      type: string
      responses:
        '201':
          description: Order created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  order_id:
                    type: integer
          links:
            GetOrderByOrderId:
              $ref: '#/components/links/GetOrderByOrderId'
        '500':
          $ref: "#/components/responses/InternalServerError"
    put:
      tags:
          - Orders
      summary:  Order update
      description: |
        Update order details to Hery for processing
        and shipping
      operationId: updateOrderDetails
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                order_id: 
                  type: integer
                products:
                  type: array
                  items:
                    $ref: "#/components/schemas/Product"
                address:
                  $ref: "#/components/schemas/Address"
      responses:
        '201':
          description: Order updated successfully
        '500':
          $ref: "#/components/responses/InternalServerError"
    delete:
      tags:
          - Orders
      summary: Delete Order
      description: Delete order details from Hery
      operationId: deleteOrderDetails
      parameters:
        - name: order_id
          in: query
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Order details cancelled successfully!
        '500':
          $ref: "#/components/responses/InternalServerError"
    get:
      tags:
          - Orders
      summary: Get Order Details
      description: Get order details from Hery
      operationId: getOrderDetails
      parameters:
        - $ref: "#/components/parameters/orderIdQueryParam"
      responses:
        '200':
          description: Fetch Order details successfully
          content:
            application/json:
              schema: 
                type: object
                properties:
                  order_id:
                    type: integer
                  products:
                    type: array
                    items:
                      $ref: "#/components/schemas/Product"
                  address:
                    $ref: "#/components/schemas/Address"
        '500':
          $ref: "#/components/responses/InternalServerError"
  /orders/{order_id}:
    get:
      tags:
        - Orders
      summary: Get Order Details
      description: Get order details from Hery
      operationId: getOrderDetailsUsingPathParam
      deprecated: true
      parameters:
        - $ref: "#/components/parameters/orderIdPathParam"
      responses:
        '200':
          description: Fetch Order details successfully
          content:
            application/json:
              schema: 
                type: object
                properties:
                  order_id:
                    type: integer
                  products:
                    type: array
                    items:
                      $ref: "#/components/schemas/Product"
                  address:
                    $ref: "#/components/schemas/Address"
        '500':
          $ref: "#/components/responses/InternalServerError"
components:
  parameters:
    orderIdQueryParam:
      name: order_id
      in: query
      required: true
      schema:
        type: integer
    orderIdPathParam:
      name: order_id
      in: path
      required: true
      schema:
        type: integer
  schemas:
    Address:
      type: object
      properties:
        addressLine:
          type: string
        city:
          type: string
        state:
          type: string
          enum:
            - Gdańsk
            - Sopot
            - Gdynia
        zipcode:
          type: string  
        isOfficeAddress:
          type: boolean
      required: [addressLine, city, state, zipcode]
    Product:
      type: object
      properties:
        product_id:
          type: integer
        name:
          type: string
        price:
          type: number
          format: float
        category_name:
          type: string
          nullable: true
        release_date:
          type: string
          format: date
          readOnly: true
        quantity:
          type: integer
          description: |
            ***Quantity*** represents `stock` value when this field is being sent by HeryShop.Where as in the scenarios of consumer sending this feild, it represents `number of product items` inside the order. Consumers are expected to handle the scenario of stopping the end user <u>*when the stock value is 0*</u>
    Category:
      type: object
      properties:
        category_id:
          type: integer
        name:
          type: string
    T-shirt:
      allOf:
        - $ref: "#/components/schemas/Product"
        - type: object
          properties:
            ram:
              type: string
              enum:
                - black 
                - yellow 
                - red 
  responses:
    InternalServerError:
      description: |
        An error occured while processing the request.
        Please contract support@hery.com
  links:
    GetOrderByOrderId:
      description: >
        The 'orderId' value returned in the response can be used 
          as input parameter in 'GET /orders'.
      operationId: getProductDetails
      parameters:
        orderId: '$response.body#/orderId'
  securitySchemes:
    BasicAuth:
      type: http
      scheme: basic
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-KEY
    oAuth2AuthCode:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl:  https://example.com/api/oauth,access
          tokenUrl: https://example.com/api/oauth,access
          scopes:
            read: Read only access
            write: Write only access
            admin: Admin access
    
    
    
    
    
    
    
    